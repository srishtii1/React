[{"/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/App.js":"1","/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/reportWebVitals.js":"2","/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/index.js":"3","/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/components/MenuComponent.js":"4","/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/shared/dishes.js":"5","/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/components/DishdetailComponent.js":"6","/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/components/mainComponent.js":"7","/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/components/MainComponent.js":"8","/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/components/HeaderComponent.js":"9","/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/components/FooterComponent.js":"10","/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/components/HomeComponent.js":"11","/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/components/ContactComponent.js":"12","/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/shared/comments.js":"13","/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/shared/leaders.js":"14","/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/shared/promotions.js":"15","/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/components/AboutusComponent.js":"16","/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/components/CommentForm.js":"17","/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/redux/dishes.js":"18","/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/redux/comments.js":"19","/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/redux/promotions.js":"20","/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/redux/leaders.js":"21","/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/redux/ActionCreators.js":"22","/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/redux/ActionTypes.js":"23","/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/components/LoadingComponent.js":"24","/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/redux/forms.js":"25","/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/shared/baseUrl.js":"26","/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/redux/configureStore.js":"27"},{"size":518,"mtime":1610434358358,"results":"28","hashOfConfig":"29"},{"size":362,"mtime":1607840181019,"results":"30","hashOfConfig":"29"},{"size":643,"mtime":1610434313926,"results":"31","hashOfConfig":"29"},{"size":2099,"mtime":1610381854918,"results":"32","hashOfConfig":"29"},{"size":1448,"mtime":1608620593000,"results":"33","hashOfConfig":"29"},{"size":7204,"mtime":1611416302526,"results":"34","hashOfConfig":"29"},{"size":909,"mtime":1608261731013,"results":"35","hashOfConfig":"36"},{"size":4668,"mtime":1611414059428,"results":"37","hashOfConfig":"29"},{"size":5911,"mtime":1611376464201,"results":"38","hashOfConfig":"29"},{"size":2595,"mtime":1608439747957,"results":"39","hashOfConfig":"29"},{"size":2213,"mtime":1611398312176,"results":"40","hashOfConfig":"29"},{"size":10836,"mtime":1611411363572,"results":"41","hashOfConfig":"29"},{"size":4117,"mtime":1608620556055,"results":"42","hashOfConfig":"29"},{"size":2345,"mtime":1608620572042,"results":"43","hashOfConfig":"29"},{"size":435,"mtime":1608620585132,"results":"44","hashOfConfig":"29"},{"size":5054,"mtime":1611411365501,"results":"45","hashOfConfig":"29"},{"size":4775,"mtime":1609613868955,"results":"46","hashOfConfig":"47"},{"size":673,"mtime":1610464976524,"results":"48","hashOfConfig":"29"},{"size":686,"mtime":1610536797951,"results":"49","hashOfConfig":"29"},{"size":699,"mtime":1610435608934,"results":"50","hashOfConfig":"29"},{"size":663,"mtime":1611339923196,"results":"51","hashOfConfig":"29"},{"size":6713,"mtime":1611393330417,"results":"52","hashOfConfig":"29"},{"size":689,"mtime":1611393261674,"results":"53","hashOfConfig":"29"},{"size":286,"mtime":1610040176028,"results":"54","hashOfConfig":"29"},{"size":160,"mtime":1610127122282,"results":"55","hashOfConfig":"29"},{"size":49,"mtime":1610378886102,"results":"56","hashOfConfig":"29"},{"size":772,"mtime":1611411419452,"results":"57","hashOfConfig":"29"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"iuxny0",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"6lkgn5",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},"1mzbrd8",{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/App.js",[],["121","122"],"/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/reportWebVitals.js",[],"/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/index.js",[],"/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/components/MenuComponent.js",[],"/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/shared/dishes.js",[],["123","124"],"/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/components/DishdetailComponent.js",["125","126","127"],"import {React, Component} from 'react';\nimport { Card, CardBody, CardText, CardImg, CardTitle, Breadcrumb, BreadcrumbItem,Button, Modal, ModalBody, ModalHeader, Label, Row , Col } from 'reactstrap';\nimport {Link} from 'react-router-dom';  \nimport { Control, LocalForm, Errors } from \"react-redux-form\";\nimport {Loading} from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !val || val.length <= len;\nconst minLength = (len) => (val) => val && val.length >= len;\n\nfunction RenderDish({ dish }) {\n  if (dish != null) {\n    return (\n      <div className = \"col-12 col-md m-1\" key={dish.id}>\n        <FadeTransform in \n                transformProps = {{\n                    exitTransform: 'scale(0.5) translateY(-50%)'\n                }}>\n          <Card>\n            <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\n            <CardBody>\n              <CardTitle>{dish.name}</CardTitle>\n              <CardText>{dish.description}</CardText>\n            </CardBody>\n          </Card>\n        </FadeTransform>\n      </div>\n    );\n  } else {\n    return <div></div>;\n  }\n}\nfunction RenderComments({ comments,postComment, dishId }) {\n  if (comments) {\n      return (\n        <div className = \"col-12  m-1\">\n          <h4>Comments</h4>\n          <ul className = \"list-unstyled\">\n              <Stagger in>\n              {comments.map((comment) => {\n                return (\n                  <Fade in> \n                      <li key={comment.id}>\n                      <p>{comment.comment}</p>\n                      <p> -- {comment.author} ,{\" \"},\n                        {new Intl.DateTimeFormat(\"en-US\", {\n                          year: \"numeric\",\n                          month: \"short\",\n                          day: \"2-digit\",\n                        }).format(new Date(Date.parse(comment.date)))}\n                      </p>\n                    </li>\n                </Fade>\n                );\n              })}\n              </Stagger>\n            </ul>\n            <CommentForm dishId={dishId} postComment={postComment}/>\n        </div>\n      );\n    }\n    else {\n      return (<div></div>);\n    }\n  \n}\n\nclass CommentForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isModalOpen: false,\n    };\n\n    this.toggleModal = this.toggleModal.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  toggleModal() {\n    this.setState({\n      isModalOpen: !this.state.isModalOpen,\n    });\n  }\n\n  handleSubmit(values) {\n    console.log(\"Current State is: \" + JSON.stringify(values));\n    alert(\"Current State is: \" + JSON.stringify(values));\n    this.toggleModal();\n    this.props.postComment(this.props.dishId, values.rating, values.yourname, values.comment);\n    //event.preventDefault();\n  }\n\n  render() {\n    return (\n      <div>\n        <Button\n          outline\n          type=\"submit\"\n          color=\"secondary\"\n          onClick={this.toggleModal}\n        >\n          <span className=\"fa fa fa-pencil fa-lg\"></span> Submit Comment\n        </Button>\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n          <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\n          <ModalBody>\n            <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\n              <Row className=\"form-group\">\n                <Col md={12}>\n                  <Label htmlFor=\"rating\">Rating</Label>\n                  <Control.select\n                    model=\".rating\"\n                    type=\"select\" \n                    id='rating'\n                    name=\"rating\"\n                    className=\"form-control custom-select\"\n                  >\n                    <option value=\"1\">1</option>\n                    <option value=\"2\">2</option>\n                    <option value=\"3\">3</option>\n                    <option value=\"4\">4</option>\n                    <option value=\"5\">5</option>\n                  </Control.select>\n                </Col>\n              </Row>\n\n              <Row className=\"form-group\">\n                <Col md={12}>\n                  <Label htmlFor=\"yourname\">Your Name</Label>\n                  <Control.text\n                    model=\".yourname\"\n                    id=\"yourname\"\n                    name=\"yourname\"\n                    placeholder=\"Your Name\"\n                    className=\"form-control\"\n                    validators={{\n                      required,\n                      minLength: minLength(3),\n                      maxLength: maxLength(15),\n                    }}\n                  />\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".yourname\"\n                    show=\"touched\"\n                    messages={{\n                      required: \"Required\",\n                      minLength: \"Must be greater than 2 characters\",\n                      maxLength: \"Must be 15 characters or less\",\n                    }}\n                  />\n                </Col>\n              </Row>\n\n              <Row className=\"form-group\">\n                <Col md={12}>\n                  <Label htmlFor=\"comment\">Comment</Label>\n                  <Control.textarea\n                    model=\".comment\"\n                    id=\"comment\"\n                    name=\"comment\"\n                    rows=\"6\"\n                    className=\"form-control\"\n                  />\n                </Col>\n              </Row>\n              <Row className=\"form-group\">\n                <Col md={12}>\n                  <Button type=\"submit\" color=\"primary\">\n                    Submit\n                  </Button>\n                </Col>\n              </Row>\n            </LocalForm>\n          </ModalBody>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst DishDetail = (props) => {\n  if (props.isLoading) {\n    return(\n    <div className = \"container\">\n        <div className = \"row\">\n          <Loading />\n        </div>\n    </div>\n    );\n  }\n  else if (props.errMess){\n    return(\n      <div className = \"container\">\n          <div className = \"row\">\n            <h4>{props.errMess}</h4>\n          </div>\n      </div>\n      );\n  }\n  else\n      return (\n        <div className=\"container\">\n          <div className=\"row\">\n            <Breadcrumb>\n              <BreadcrumbItem>\n                <Link to=\"/menu\">Menu</Link>\n              </BreadcrumbItem>\n              <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\n            </Breadcrumb>\n            <div className=\"col-12\">\n              <h3>{props.dish.name}</h3>\n              <hr />\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-12 col-md-5 m-1\">\n              <RenderDish dish={props.dish} />\n            </div>\n            <div className=\"col-12 col-md-5 m-1\">\n              <RenderComments \n              dishId={props.dish.id}\n              comments={props.comments} \n              postComment={props.postComment}\n              />\n            </div>\n          </div>\n        </div>\n      );\n};\n\nexport default DishDetail;\n\n\n","/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/components/mainComponent.js",[],"/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/components/MainComponent.js",[],"/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/components/HeaderComponent.js",[],"/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/components/FooterComponent.js",[],"/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/components/HomeComponent.js",[],"/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/components/ContactComponent.js",["128","129","130","131","132","133","134","135"],"import React , {Component} from 'react';\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Row , Col  } from 'reactstrap';\nimport { Control, Form, Errors } from 'react-redux-form';\nimport { Link } from 'react-router-dom';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => (val) && (val.length >= len);\nconst isNum = (val) => !isNaN(Number(val));\nconst validEmail = (val) => /^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,4}/.test(val);\n\nclass Contact extends Component\n {\n    constructor(props)\n    {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n\n    handleSubmit(values)\n    {\n        console.log(\"Current state is: \" +JSON.stringify(values));\n        this.props.resetFeedbackForm();\n        this.props.postFeedback(values.firstname, values.lastname, values.telnum, values.email, values.agree, values.contactType, values.message);\n        alert(\"Thank You for your feedback! \\n\" +JSON.stringify(values));\n        //default behavior is going to next page after submitting. we are preventing that .\n    }\n\n    render()\n    {\n  \n    return(\n        <div className=\"container\">\n            <div className = \"row\">\n                <Breadcrumb>\n                    <BreadcrumbItem> <Link to = '/home'> Home </Link> </BreadcrumbItem>\n                    <BreadcrumbItem active> Contact Us </BreadcrumbItem>\n                </Breadcrumb>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12\">\n                <h3>Location Information</h3>\n                </div>\n                <div className=\"col-12 col-sm-4 offset-sm-1\">\n                        <h5>Our Address</h5>\n                        <address>\n                        121, Clear Water Bay Road<br />\n                        Clear Water Bay, Kowloon<br />\n                        HONG KONG<br />\n                        <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\n                        <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\n                        <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n                        </address>\n                </div>\n                <div className=\"col-12 col-sm-6 offset-sm-1\">\n                    <h5>Map of our Location</h5>\n                </div>\n                <div className=\"col-12 col-sm-11 offset-sm-1\">\n                    <div className=\"btn-group\" role=\"group\">\n                        <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"> <i className=\"fa fa-phone\"></i> Call</a>\n                        <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\n                        <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\n                    </div>\n                </div>\n            </div>\n            <div className = \"row row-container\">\n                <div className = \"col-12\">\n                    <h3> Send us Your Feedback </h3>\n                </div>\n                <div className = \"col-12 col-md-9\">\n                    <Form model = \"feedback\" onSubmit = {(values) => this.handleSubmit(values)}>\n                        <Row className = \"form-group\">\n                            <Label htmlFor = \"firstname\" md={2}> First Name </Label>\n                            <Col md = {10}>\n                                <Control.text model = \".firstname\" id = \"firstname\" name = \"firstname\" \n                                placeholder = \"enter your first name\"\n                                className = \"form-control\"\n                                validators = {\n                                    {\n                                        required, minLength: minLength(3), maxLength:maxLength(15)\n                                    }\n                                }\n                                />\n                            <Errors \n                                className = \"text-danger\"\n                                model = \".firstname\"\n                                show = \"touched\"\n                                messages = {\n                                    {\n                                        required: 'required',\n                                        minLength: 'must be greater than 2 char ',\n                                        maxLength: 'must be less than 15 characters'\n                                    }\n                                }\n                            />\n\n                                \n                            </Col>\n                        </Row>\n                        <Row className = \"form-group\">\n                            <Label htmlFor = \"lastname\" md={2}> Last Name </Label>\n                            <Col md = {10}>\n                                <Control.text model = \".lastname\" id = \"lastname\" name = \"lastname\" placeholder = \"enter your last name\"\n                                className = \"form-control\"\n                                validators = {\n                                    {\n                                        required, minLength: minLength(3), maxLength:maxLength(15)\n                                    }\n                                }\n                               />\n                            <Errors \n                                className = \"text-danger\"\n                                model = \".lastname\"\n                                show = \"touched\"\n                                messages = {\n                                    {\n                                        required: 'required',\n                                        minLength: 'must be greater than 2 char ',\n                                        maxLength: 'must be less than 15 characters'\n                                    }\n                                }\n                            />  \n                            </Col>\n                        </Row>\n                        <Row className = \"form-group\">\n                            <Label htmlFor = \"telnum\" md={2}> Contact Tel. </Label>\n                            <Col md = {10}>\n                                <Control.text model = \".telnum\" id = \"telnum\" name = \"telnum\" placeholder = \"enter your Ph. Number\"\n                                className = \"form-control\"\n                                validators = {\n                                    {\n                                        required, minLength: minLength(3), maxLength:maxLength(10), isNum\n                                    }\n                                }\n                                />\n                            <Errors \n                                className = \"text-danger\"\n                                model = \".telnum\"\n                                show = \"touched\"\n                                messages = {\n                                    {\n                                        required: 'required',\n                                        minLength: 'must be greater than 2 numbers ',\n                                        maxLength: 'must be less than 11 numbers',\n                                        isNum: 'must be a number'\n                                    }\n                                }\n                            />  \n                                \n                            </Col>\n                        </Row>\n                        <Row className = \"form-group\">\n                            <Label htmlFor = \"email\" md={2}> Email </Label>\n                            <Col md = {10}>\n                                <Control.text model = \".email\" id = \"email\" name = \"email\" placeholder = \"enter your email\"\n                                className = \"form-control\"\n                                validators = {\n                                    {\n                                        required, validEmail\n                                   \n                                    }\n                                }\n                                />\n                            <Errors \n                                className = \"text-danger\"\n                                model = \".email\"\n                                show = \"touched\"\n                                messages = {\n                                    {\n                                        required: 'Required',\n                                        validEmail: 'Invalid Email address'\n                                    }\n                                }\n                            />      \n                            </Col>\n                        </Row>\n                        <Row className = \"form-group\">\n                            <Col md = {{size:6, offset:2}}>\n                            <div className = \"form-check\">\n                                <Label check>\n                                    <Control.checkbox model = \".gree\" name = \"agree\"\n                                     className = \"form-check-input\"\n                                     \n                                    /> {' '}\n                                     <strong> May we contact you? </strong>\n                                </Label>\n                            </div>\n                            </Col>\n                            <Col md = {{size:3, offset:1}}>\n                                <Control.select model = \".contactType\" name = \"contactType\"\n                                className = \"form-control\">\n                                <option>Tel.</option>\n                                <option>Email</option>\n                                </Control.select>\n                            </Col> \n                        </Row>\n                        <Row className = \"form-group\">\n                            <Label htmlFor = \"message\" md={2}> Your Feedback </Label>\n                            <Col md = {10}>\n                                <Control.textarea model = \".message\" id = \"message\" name = \"message\" \n                                rows = \"12\"\n                                className = \"form-control\"\n                                />\n                            </Col>\n                        </Row>\n                        <Row className = \"form-group\">\n                            <Col md = {{size:10, offset:2}}>\n                                <Button type = \"submit\" color = \"primary\">\n                                    Send Feedback\n                                </Button>\n                            </Col>\n                        </Row>\n                    </Form>\n                    \n                </div>\n            </div>\n        </div>\n    );\n    }\n    \n }\n\nexport default Contact;","/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/shared/comments.js",[],["136","137"],"/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/shared/leaders.js",[],["138","139"],"/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/shared/promotions.js",[],["140","141"],"/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/components/AboutusComponent.js",[],"/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/components/CommentForm.js",["142","143","144","145","146"],"import {React, Component} from 'react';\nimport {Button, Modal, ModalBody, ModalHeader, Label, Row , Col } from 'reactstrap';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\n\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => (val) && (val.length >= len);\n\nclass CommentForm extends Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            isModalOpen:false\n        }\n        \n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleComment = this.handleComment.bind(this);\n\n    }\n\n    handleComment(values)\n    {\n        this.toggleModal();\n        console.log(\"Current state is: \" +JSON.stringify(values));\n        this.props.addComment(this.props.dishId, values.rating, values.author, values.comment);\n\n    }\n\n    toggleModal()\n    {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n\n    render()\n    {\n        return(\n        <div>\n    \n            <Button outline onClick = {this.toggleModal}>\n                <span className = \"fa fa-edit fa-lg\"></span>\n                Submit Comment\n            </Button>\n   \n            <Modal isOpen = {this.state.isModalOpen} toggle = {this.toggleModal} >\n            <ModalHeader toggle = {this.toggleModal}>Submit Comment</ModalHeader>\n            <ModalBody>\n                {\n                    <div className = \"col-12 col-md-9\" >\n                    <LocalForm onSubmit = {(values) => this.handleComment(values)}>\n                        <Row className = \"form-group\">\n                            <Label htmlFor = \"rating\" md={10}> Rating </Label>\n                            <Col md = {10}  >\n                                <Control.select className = \"col-12 col-md-9\" model = \".rating\" id = \"rating\" name = \"Rating\" >\n                                    <option value = \"1\">1</option>\n                                    <option value = \"2\">2</option>\n                                    <option value = \"3\">3</option>\n                                    <option value = \"4\">4</option>\n                                    <option value = \"5\">5</option>\n                                </Control.select>\n                            </Col>\n                        </Row>\n                        <Row className = \"form-group\">\n                            <Label htmlFor = \"name\" md={9}> Your Name </Label>\n                            <Col md = {10}>\n                                <Control.text className = \"col-12 col-md-9\" model = \".name\" id = \"name\" name = \"name\" placeholder = \"enter your name\"\n                                className = \"form-control\"\n                                validators = {\n                                    {\n                                        required, minLength: minLength(3), maxLength:maxLength(15)\n                                    }\n                                }\n                               />\n                            <Errors \n                                className = \"text-danger\"\n                                model = \".name\"\n                                show = \"touched\"\n                                messages = {\n                                    {\n                                        required: 'required',\n                                        minLength: 'must be greater than 2 char ',\n                                        maxLength: 'must be less than or equal to 15 characters'\n                                    }\n                                }\n                            />  \n                            </Col>\n                        </Row>\n                        <Row className = \"form-group\">\n                            <Label htmlFor = \"message\" md={3}> Comment </Label>\n                            <Col md = {10}>\n                                <Control.textarea className = \"col-12 col-md-9\"  model = \".message\" id = \"message\" name = \"message\" \n                                rows = \"6\"\n                                className = \"form-control\"\n                                />\n                            </Col>\n                        </Row>\n                        <Row className = \"form-group\">\n                            <Col md = {{size:10, offset:2}}>\n                                <Button type = \"submit\" color = \"primary\">\n                                    Submit\n                                </Button>\n                            </Col>\n                        </Row>\n                    </LocalForm>\n                    \n                </div>\n                }\n            </ModalBody>\n            </Modal>\n          \n        </div>\n        );\n    }\n}\nexport default CommentForm;\n","/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/redux/dishes.js",[],"/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/redux/comments.js",[],"/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/redux/promotions.js",[],"/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/redux/leaders.js",[],"/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/redux/ActionCreators.js",[],"/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/redux/ActionTypes.js",[],"/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/components/LoadingComponent.js",[],"/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/redux/forms.js",[],"/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/shared/baseUrl.js",[],["147","148"],"/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/redux/configureStore.js",[],{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","replacedBy":"152"},{"ruleId":"149","replacedBy":"153"},{"ruleId":"151","replacedBy":"154"},{"ruleId":"155","severity":1,"message":"156","line":114,"column":19,"nodeType":"157","endLine":120,"endColumn":20},{"ruleId":"155","severity":1,"message":"158","line":133,"column":19,"nodeType":"157","endLine":144,"endColumn":21},{"ruleId":"155","severity":1,"message":"159","line":161,"column":19,"nodeType":"157","endLine":167,"endColumn":21},{"ruleId":"160","severity":1,"message":"161","line":62,"column":25,"nodeType":"157","endLine":62,"endColumn":67},{"ruleId":"155","severity":1,"message":"158","line":76,"column":33,"nodeType":"157","endLine":84,"endColumn":35},{"ruleId":"155","severity":1,"message":"158","line":104,"column":33,"nodeType":"157","endLine":111,"endColumn":34},{"ruleId":"155","severity":1,"message":"158","line":129,"column":33,"nodeType":"157","endLine":136,"endColumn":35},{"ruleId":"155","severity":1,"message":"158","line":156,"column":33,"nodeType":"157","endLine":164,"endColumn":35},{"ruleId":"155","severity":1,"message":"162","line":182,"column":37,"nodeType":"157","endLine":185,"endColumn":39},{"ruleId":"155","severity":1,"message":"156","line":191,"column":33,"nodeType":"157","endLine":192,"endColumn":60},{"ruleId":"155","severity":1,"message":"159","line":201,"column":33,"nodeType":"157","endLine":204,"endColumn":35},{"ruleId":"149","replacedBy":"163"},{"ruleId":"151","replacedBy":"164"},{"ruleId":"149","replacedBy":"165"},{"ruleId":"151","replacedBy":"166"},{"ruleId":"149","replacedBy":"167"},{"ruleId":"151","replacedBy":"168"},{"ruleId":"155","severity":1,"message":"156","line":59,"column":33,"nodeType":"157","endLine":59,"endColumn":128},{"ruleId":"155","severity":1,"message":"158","line":71,"column":33,"nodeType":"157","endLine":78,"endColumn":34},{"ruleId":"169","severity":1,"message":"170","line":72,"column":33,"nodeType":"171","endLine":72,"endColumn":59},{"ruleId":"155","severity":1,"message":"159","line":96,"column":33,"nodeType":"157","endLine":99,"endColumn":35},{"ruleId":"169","severity":1,"message":"170","line":98,"column":33,"nodeType":"171","endLine":98,"endColumn":59},{"ruleId":"149","replacedBy":"172"},{"ruleId":"151","replacedBy":"173"},"no-native-reassign",["174"],"no-negated-in-lhs",["175"],["174"],["175"],"react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE",["174"],["175"],["174"],["175"],["174"],["175"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["174"],["175"],"no-global-assign","no-unsafe-negation"]