[{"/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/App.js":"1","/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/reportWebVitals.js":"2","/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/index.js":"3","/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/components/MenuComponent.js":"4","/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/shared/dishes.js":"5","/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/components/DishdetailComponent.js":"6","/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/components/mainComponent.js":"7","/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/components/MainComponent.js":"8","/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/components/HeaderComponent.js":"9","/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/components/FooterComponent.js":"10","/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/components/HomeComponent.js":"11","/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/components/ContactComponent.js":"12","/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/shared/comments.js":"13","/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/shared/leaders.js":"14","/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/shared/promotions.js":"15","/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/components/AboutusComponent.js":"16","/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/redux/configStore.js":"17","/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/redux/reducer.js":"18"},{"size":515,"mtime":1609258277204,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1607840181019,"results":"21","hashOfConfig":"20"},{"size":643,"mtime":1608383502000,"results":"22","hashOfConfig":"20"},{"size":1473,"mtime":1608781778000,"results":"23","hashOfConfig":"20"},{"size":1448,"mtime":1608620593000,"results":"24","hashOfConfig":"20"},{"size":2542,"mtime":1608781780000,"results":"25","hashOfConfig":"20"},{"size":909,"mtime":1608261731013,"results":"26","hashOfConfig":"27"},{"size":2308,"mtime":1609258167425,"results":"28","hashOfConfig":"20"},{"size":5909,"mtime":1609091159470,"results":"29","hashOfConfig":"20"},{"size":2595,"mtime":1608439747957,"results":"30","hashOfConfig":"20"},{"size":1118,"mtime":1608628548000,"results":"31","hashOfConfig":"20"},{"size":10135,"mtime":1609086351173,"results":"32","hashOfConfig":"20"},{"size":4117,"mtime":1608620556055,"results":"33","hashOfConfig":"20"},{"size":2345,"mtime":1608620572042,"results":"34","hashOfConfig":"20"},{"size":435,"mtime":1608620585132,"results":"35","hashOfConfig":"20"},{"size":4209,"mtime":1608793857676,"results":"36","hashOfConfig":"20"},{"size":204,"mtime":1609258225533,"results":"37","hashOfConfig":"20"},{"size":441,"mtime":1609258227664,"results":"38","hashOfConfig":"20"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1mzbrd8",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"6lkgn5",{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"43"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"43"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"43"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/App.js",[],"/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/reportWebVitals.js",[],["80","81"],"/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/index.js",[],"/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/components/MenuComponent.js",[],"/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/shared/dishes.js",[],"/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/components/DishdetailComponent.js",[],"/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/components/mainComponent.js",[],"/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/components/MainComponent.js",["82","83"],"import React, { Component } from 'react';\nimport Header from './HeaderComponent';\nimport Menu from './MenuComponent';\nimport DishDetail from './DishdetailComponent';\nimport Footer from './FooterComponent';\nimport Home from'./HomeComponent';\nimport Contact from './ContactComponent';\nimport About from './AboutusComponent';\nimport { Switch, Route, Redirect, withRouter} from 'react-router-dom'; \nimport {connect, Connect} from 'react-redux';\n// main component will obtain the state from \"STORE\"\n\nconst mapStateToProps = state => {\n\n  return{\n    dishes: state.dishes,\n    comments: state.comments,\n    promotions: state.promotions,\n    leaders: state.leaders\n  }\n};\n\n\nclass Main extends Component {\n\n  constructor(props){\n    super(props);\n  }\n\n  render() {\n    const HomePage = () => {\n      return(\n        <Home dish = {this.props.dishes.filter((dish) => dish.featured)[0]}\n              promotion = {this.props.promotions.filter((promo) => promo.featured)[0]}\n              leader = {this.props.leaders.filter((lead) => lead.featured)[0]}\n        />\n\n      );\n    }\n    console.log(this.props.dishes);\n    const DishWithId = ( {match} ) => {\n      if (this.props.dishes!= null)\n      return(\n        <DishDetail dish = {this.props.dishes.filter((dish) => dish.id === parseInt(match.params.dishId, 10))[0]}\n          comments = {this.props.comments.filter ((comment) => comment.dishId === parseInt(match.params.dishId, 10))}\n        /> \n      );\n      else\n      return(\n        <div />\n      );\n    }\n    return (\n      <div>\n        <Header/>\n          <Switch>\n            <Route path = \"/home\" component = {HomePage} />\n            <Route exact path = \"/menu\" component = {() => <Menu dishes = {this.props.dishes}/>} />\n            <Route path = \"/menu/:dishId\" component = {DishWithId} />\n            <Route exact path = \"/contactus\" component = {Contact} />\n            <Route path = \"/About\" component = {() => <About leaders  = {this.props.leaders}/>} />\n            <Redirect to = \"/home\" />\n          </Switch>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(connect(mapStateToProps)(Main));\n//used an inline function for calling Menu since we needed to pass props as a parameter\n//redirect is used as a default path when route does not match any of the two options given ","/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/components/HeaderComponent.js",[],"/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/components/FooterComponent.js",[],"/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/components/HomeComponent.js",[],"/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/components/ContactComponent.js",["84"],"import React , {Component} from 'react';\nimport { Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, Label, Input, Col, FormFeedback } from 'reactstrap';\nimport { Link } from 'react-router-dom';\n\n\nclass Contact extends Component\n {\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            firstname: '',\n            lastname: '',\n            telnum:'',\n            email:'',\n            agree: false,\n            contactType:'Tel.',\n            message:'',\n            touched:{\n                firstname:false,\n                lastname:false,\n                telnum:false,\n                email:false\n            }\n        }\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleBlur = this.handleBlur.bind(this);\n    }\n\n    handleInputChange(event)\n    {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked:target.value;\n        const name = target.name;\n\n        this.setState({\n            [name] : value\n        });\n    }\n\n    handleSubmit(event)\n    {\n        console.log(\"Current state is: \" +JSON.stringify(this.state));\n        alert(\"Current state is: \" +JSON.stringify(this.state));\n        event.preventDefault(); \n        //default behavior is going to next page after submitting. we are preventing that .\n    }\n\n    handleBlur = (field) => (evt) => \n    {\n        this.setState({\n            touched: { ...this.state.touched, [field]: true}\n        }\n        );\n    }\n\n    validate(firstname, lastname, telnum, email)\n    {\n        const errors = {\n            firstname: '',\n            lastname: '',\n            telnum:'',\n            email:'',\n        };\n        if (this.state.touched.firstname && firstname.length <= 1 )\n            errors.firstname = \"First Name must be greater than 1 characters\";\n        else if (this.state.touched.firstname && firstname.length > 10 )\n            errors.firstname = \"First Name must be less than 10 characters\";\n        else if (this.state.touched.lastname && lastname.length < 1 )\n            errors.lastname = \"Last Name must be greater than 1 characters\";\n\n        const reg = /^\\d+$/; \n        // this expression means that all characters of reg (regular expression) are numeric\n        //reg.test is a built in method for the regular expression. It returns a boolean indicating whether the given pattern exists in teh string or not \n        if(this.state.touched.telnum && !reg.test(telnum))\n            errors.telnum = \"Tel number must be numeric\";\n\n        if(this.state.touched.email && email.split('').filter(x=> x==='@').length !== 1)\n            errors.email = \"Email must contain @\";\n\n        return errors;\n    }\n\n    render()\n    {\n    const errors = this.validate(this.state.firstname, this.state.lastname, this.state.telnum, this.state.email);   \n    return(\n        <div className=\"container\">\n            <div className = \"row\">\n                <Breadcrumb>\n                    <BreadcrumbItem> <Link to = '/home'> Home </Link> </BreadcrumbItem>\n                    <BreadcrumbItem active> Contact Us </BreadcrumbItem>\n                </Breadcrumb>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12\">\n                <h3>Location Information</h3>\n                </div>\n                <div className=\"col-12 col-sm-4 offset-sm-1\">\n                        <h5>Our Address</h5>\n                        <address>\n                        121, Clear Water Bay Road<br />\n                        Clear Water Bay, Kowloon<br />\n                        HONG KONG<br />\n                        <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\n                        <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\n                        <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n                        </address>\n                </div>\n                <div className=\"col-12 col-sm-6 offset-sm-1\">\n                    <h5>Map of our Location</h5>\n                </div>\n                <div className=\"col-12 col-sm-11 offset-sm-1\">\n                    <div className=\"btn-group\" role=\"group\">\n                        <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"> <i className=\"fa fa-phone\"></i> Call</a>\n                        <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\n                        <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\n                    </div>\n                </div>\n            </div>\n            <div className = \"row row-container\">\n                <div className = \"col-12\">\n                    <h3> Send us Your Feedback </h3>\n                </div>\n                <div className = \"col-12 col-md-9\">\n                    <Form onSubmit = {this.handleSubmit}>\n                        <FormGroup row>\n                            <Label htmlFor = \"firstname\" md={2}> First Name </Label>\n                            <Col md = {10}>\n                                <Input type = \"text\" id = \"firstname\" name = \"firstname\" placeholder = \"enter your first name\"\n                                value = {this.state.firstname}\n                                valid = {errors.firstname === ''}\n                                invalid = {errors.firstname !== ''}\n                                onBlur = {this.handleBlur('firstname')}\n                                onChange = {this.handleInputChange}/>\n                                <FormFeedback>{errors.firstname}</FormFeedback>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup row>\n                            <Label htmlFor = \"lastname\" md={2}> Last Name </Label>\n                            <Col md = {10}>\n                                <Input type = \"text\" id = \"lastname\" name = \"lastname\" placeholder = \"enter your last name\"\n                                value = {this.state.lastname}\n                                valid = {errors.lastname === ''}\n                                invalid = {errors.lastname !== ''}\n                                onBlur = {this.handleBlur('lastname')}\n                                onChange = {this.handleInputChange}/>\n                                <FormFeedback>{errors.lastname}</FormFeedback>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup row>\n                            <Label htmlFor = \"telnum\" md={2}> Contact Tel. </Label>\n                            <Col md = {10}>\n                                <Input type = \"tel\" id = \"telnum\" name = \"telnum\" placeholder = \"enter your Ph. Number\"\n                                value = {this.state.telnum}\n                                valid = {errors.telnum === ''}\n                                invalid = {errors.telnum !== ''}\n                                onBlur = {this.handleBlur('telnum')}\n                                onChange = {this.handleInputChange}/>\n                                <FormFeedback>{errors.telnum}</FormFeedback>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup row>\n                            <Label htmlFor = \"email\" md={2}> Email </Label>\n                            <Col md = {10}>\n                                <Input type = \"email\" id = \"email\" name = \"email\" placeholder = \"enter your email\"\n                                value = {this.state.email}\n                                valid = {errors.email === ''}\n                                invalid = {errors.email !== ''}\n                                onBlur = {this.handleBlur('email')}\n                                onChange = {this.handleInputChange}/>\n                                <FormFeedback>{errors.email}</FormFeedback>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup row>\n                            <Col md = {{size:6, offset:2}}>\n                            <FormGroup check>\n                                <Label check>\n                                    <Input type = \"checkbox\" name = \"agree\"\n                                     checked = {this.state.agree} \n                                     onChange = {this.handleInputChange}/> {' '}\n                                     <strong> May we contact you? </strong>\n                                </Label>\n                            </FormGroup>\n                            </Col>\n                            <Col md = {{size:3, offset:1}}>\n                                <Input type = \"select\" name = \"contactType\"\n                                value = {this.state.contactType}\n                                onChange = {this.handleInputChange}>\n                                <option>Tel.</option>\n                                <option>Email</option>\n                                </Input>\n                            </Col> \n                        </FormGroup>\n                        <FormGroup row>\n                            <Label htmlFor = \"message\" md={2}> Your Feedback </Label>\n                            <Col md = {10}>\n                                <Input type = \"textarea\" id = \"message\" name = \"message\" rows = \"12\"\n                                value = {this.state.message}\n                                onChange = {this.handleInputChange}/>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup row>\n                            <Col md = {{size:10, offset:2}}>\n                                <Button type = \"submit\" color = \"primary\">\n                                    Send Feedback\n                                </Button>\n                            </Col>\n                        </FormGroup>\n                    </Form>\n                    \n                </div>\n            </div>\n        </div>\n    );\n    }\n    \n }\n\nexport default Contact;","/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/shared/comments.js",[],"/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/shared/leaders.js",[],"/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/shared/promotions.js",[],["85","86"],"/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/components/AboutusComponent.js",["87","88"],"import React from 'react';\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { LEADERS } from '../shared/leaders';\n\nfunction RenderLeader({leaders})\n{\n    if (leaders != null)\n    return(\n        <div class = \"media mt-5\">\n        <img src = {leaders.image} />\n        <div class = \"media-body ml-5\" >\n            <h4 class=\"mt-0 \"> {leaders.name} </h4>\n            <h6 class=\"mt-0 \">{leaders.designation}</h6>\n            {leaders.description}\n        </div>\n    </div>\n    );\n    else\n    return(\n        <div/>\n    );\n\n}\n\nfunction About(props) {\n\n    const leaders = props.leaders.map((leader) => {\n        return (\n            <RenderLeader leaders = {leader} />\n        );\n    });\n\n    return(\n        <div className=\"container\">\n            <div className=\"row\">\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"col-12\">\n                    <h3>About Us</h3>\n                    <hr />\n                </div>                \n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12 col-md-6\">\n                    <h2>Our History</h2>\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\n                </div>\n                <div className=\"col-12 col-md-5\">\n                    <Card>\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\n                        <CardBody>\n                            <dl className=\"row p-1\">\n                                <dt className=\"col-6\">Started</dt>\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\n                                <dt className=\"col-6\">Major Stake Holder</dt>\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\n                                <dd className=\"col-6\">$1,250,375</dd>\n                                <dt className=\"col-6\">Employees</dt>\n                                <dd className=\"col-6\">40</dd>\n                            </dl>\n                        </CardBody>\n                    </Card>\n                </div>\n                <div className=\"col-12\">\n                    <Card>\n                        <CardBody className=\"bg-faded\">\n                            <blockquote className=\"blockquote\">\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\n                                    I'm not hungry enough to eat six.</p>\n                                <footer className=\"blockquote-footer\">Yogi Berra,\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\n                                    P. Pepe, Diversion Books, 2014</cite>\n                                </footer>\n                            </blockquote>\n                        </CardBody>\n                    </Card>\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12\">\n                    <h2>Corporate Leadership</h2>\n                </div>\n                <div className=\"col-12\">\n                    <Media list>\n                        {leaders}\n                    </Media>\n                    \n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default About;    ","/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/redux/configStore.js",[],"/Users/srishti/Library/Mobile Documents/com~apple~CloudDocs/React/confusion/src/redux/reducer.js",[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":10,"column":18,"nodeType":"95","messageId":"96","endLine":10,"endColumn":25},{"ruleId":"97","severity":1,"message":"98","line":26,"column":3,"nodeType":"99","messageId":"100","endLine":28,"endColumn":4},{"ruleId":"101","severity":1,"message":"102","line":118,"column":25,"nodeType":"103","endLine":118,"endColumn":67},{"ruleId":"89","replacedBy":"104"},{"ruleId":"91","replacedBy":"105"},{"ruleId":"93","severity":1,"message":"106","line":4,"column":10,"nodeType":"95","messageId":"96","endLine":4,"endColumn":17},{"ruleId":"107","severity":1,"message":"108","line":11,"column":9,"nodeType":"103","endLine":11,"endColumn":38},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"no-unused-vars","'Connect' is defined but never used.","Identifier","unusedVar","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["109"],["110"],"'LEADERS' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]