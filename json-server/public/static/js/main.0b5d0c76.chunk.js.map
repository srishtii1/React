{"version":3,"sources":["components/HeaderComponent.js","components/LoadingComponent.js","shared/baseUrl.js","components/MenuComponent.js","components/DishdetailComponent.js","components/FooterComponent.js","components/HomeComponent.js","components/ContactComponent.js","components/AboutusComponent.js","redux/ActionTypes.js","redux/ActionCreators.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","reportWebVitals.js","index.js"],"names":["Header","props","state","isNavOpen","isModalOpen","toggleNav","bind","toggleModal","handleLogin","this","setState","alert","username","value","password","remember","checked","Fragment","Navbar","dark","expand","className","NavbarToggler","onClick","NavbarBrand","href","src","height","width","alt","Collapse","isOpen","navbar","Nav","NavItem","to","Button","outline","Jumbotron","Modal","toggle","ModalHeader","ModalBody","Form","onSubmit","FormGroup","Label","htmlFor","Input","type","id","name","innerRef","input","check","color","Component","Loading","baseUrl","RenderMenuItem","dish","console","log","Card","CardImg","image","CardImgOverlay","CardTitle","Menu","menu","dishes","map","isLoading","errMess","Breadcrumb","BreadcrumbItem","active","required","val","length","maxLength","len","RenderDish","in","transformProps","exitTransform","CardBody","CardText","description","RenderComments","comments","postComment","dishId","comment","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","CommentForm","handleSubmit","values","JSON","stringify","rating","yourname","Row","Col","md","select","model","text","placeholder","validators","minLength","show","messages","textarea","rows","DishDetail","Footer","RenderCard","item","designation","CardSubtitle","Home","leader","dishesLoading","dishErrMess","promotion","promoLoading","promoErrMess","leaderLoading","leaderErrMess","isNum","isNaN","Number","validEmail","test","Contact","resetFeedbackForm","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","role","size","offset","checkbox","RenderLeader","leaders","Media","tag","About","CardHeader","title","list","ADD_COMMENT","DISHES_LOADING","DISHES_FAILED","ADD_DISHES","ADD_COMMENTS","ADD_PROMOS","COMMENTS_FAILED","PROMOS_LOADING","PROMOS_FAILED","ADD_LEADERS","LEADERS_LOADING","LEADERS_FAILED","promosLoading","ActionTypes","dishesFailed","errmess","payload","promosFailed","addDishes","commentsFailed","addComments","addPromos","promos","addLeaders","leadersFailed","leadersLoading","addFeedback","feedback","feedbackFailed","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","fetchFeedback","TransitionGroup","CSSTransition","classNames","timeout","location","path","component","promotions","filter","featured","promo","exact","match","parseInt","params","commentsErrMess","key","withRouter","connect","dispatch","newComment","toISOString","fetch","method","body","headers","credentials","then","response","ok","error","Error","status","statusText","json","catch","actions","reset","newFeedback","Dishes","action","Comments","concat","Promotions","load","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0b5d0c76.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Navbar, NavbarBrand ,Nav, NavbarToggler, Collapse, NavItem, Jumbotron, Label, Input, Button, Modal, ModalBody, ModalHeader, FormGroup, Form} from 'reactstrap';\nimport { NavLink } from 'react-router-dom'; \n\nclass Header extends Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            isNavOpen : false,\n            isModalOpen:false\n        }\n        this.toggleNav = this.toggleNav.bind(this); //when you bind this you will be able to use this function as this.toggleNav\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n    }\n\n    toggleNav()\n    {\n        this.setState({\n            isNavOpen: !this.state.isNavOpen\n        });\n    }\n\n    toggleModal()\n    {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    handleLogin()\n    {\n        this.toggleModal();\n        alert(\"Username: \" + this.username.value + \" Password \"+ this.password.value + \" Remember: \" + this.remember.checked);\n\n    }\n\n    render()\n    {\n        //can use react fragment to group together items. It does add an extra node element in the DOM and is therefore preffered\n        // React fragment can also be coded in short form as <> </>\n        //collapsing navbar for xs and sm screen size\n        return(\n            <React.Fragment>\n                <Navbar dark expand = \"md\">\n                    <div className=\"container\">\n                        <NavbarToggler onClick = {this.toggleNav} />\n                        <NavbarBrand className=\"mr-auto\" href=\"/\">\n                            <img src = \"assets/images/logo.png\" height = \"30\" width = \"41\"\n                                alt = \"Ristorante Con Fusion\" />\n                        </NavbarBrand>\n                        <Collapse isOpen = { this.state.isNavOpen } navbar>\n                            <Nav navbar>\n                                <NavItem>\n                                    <NavLink className = \"nav-link \" to =\"/home\"> \n                                        <span className = \"fa fa-home fa-lg\"></span> Home\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className = \"nav-link \" to =\"/aboutus\"> \n                                        <span className = \"fa fa-info fa-lg\"></span> About Us\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className = \"nav-link \" to =\"/menu\"> \n                                        <span className = \"fa fa-list fa-lg\"></span> Menu\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className = \"nav-link \" to =\"/contactus\"> \n                                        <span className = \"fa fa-address-card fa-lg\"></span> Contact Us\n                                    </NavLink>\n                                </NavItem>\n                            </Nav>\n                            <Nav className = \"ml-auto\" navbar>\n                                <NavItem>\n                                    <Button outline onClick = {this.toggleModal}>\n                                        <span className = \"fa fa-sign-in fa-lg\"></span>\n                                        Login\n                                    </Button>\n                                </NavItem>\n                            </Nav>\n                        </Collapse>\n                    </div>\n                </Navbar>\n                <Jumbotron>\n                    <div className=\"container\">\n                        <div className = \"row row-header\">\n                            <div className = \"col-12 col-sm-6\">\n                                <h1> Ristorante Con Fusion </h1>\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\n                            </div>\n                        </div>\n                    </div>\n                </Jumbotron>\n                <Modal isOpen = {this.state.isModalOpen} toggle = {this.toggleModal}>\n                    <ModalHeader toggle = {this.toggleModal}>Login</ModalHeader>\n                    <ModalBody>\n                        <Form onSubmit = {this.handleLogin}>\n                            <FormGroup>\n                                <Label htmlFor = \"username\">Username</Label>\n                                <Input type = \"text\" id = \"username\" name = \"username\"\n                                innerRef = {(input) => this.username = input } />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label htmlFor = \"password\">Password</Label>\n                                <Input type = \"password\" id = \"password\" name = \"username\" \n                                innerRef = {(input) => this.password = input} />\n                            </FormGroup>\n                            <FormGroup check>\n                                <Label check>\n                                    <Input type = \"checkbox\" name = \"remember\" \n                                    innerRef = {(input) => this.remember = input}/>\n                                    Remember me\n                                </Label>\n                            </FormGroup>\n                            <Button type = \"submit\" value = \"submit\" color = \"primary\">Login</Button>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n            </React.Fragment>\n\n        );\n    }\n}\nexport default Header;","import React from 'react';\n\nexport const Loading = () => {\n    //fa-pulse makes the icon spin\n    return(\n        <div className = \"col-12\">\n            <span className = \"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\n            <p>Loading . . .</p>\n        </div>\n    );\n};","export const baseUrl = 'http://localhost:3001/';\n","import React from 'react';\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem} from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport {Loading} from './LoadingComponent';\nimport {baseUrl} from '../shared/baseUrl';\n\nfunction RenderMenuItem({dish})\n{\n    console.log(\"render Menu Item\");\n  \n    return(\n            \n            <Card>\n                <Link to={`/menu/${dish.id}`} >\n                    <CardImg width=\"100%\" src={baseUrl +  dish.image} alt={dish.name} />\n                    <CardImgOverlay>\n                        <CardTitle>{dish.name}</CardTitle>\n                    </CardImgOverlay>\n                </Link>\n            </Card>\n      \n      \n    );\n}\n\n//second method of writing a functional component\nconst Menu = (props) => {\n\n    const menu = props.dishes.dishes.map((dish) => {\n        return (\n            <div className=\"col-12 col-md-5 m-1\"  key={dish.id}>\n                <RenderMenuItem dish={dish} />\n            </div>\n        );\n    });\n\n    if (props.dishes.isLoading)\n    {\n        return(\n        <div className = \"container\">\n            <div className = \"row\">\n              <Loading />\n            </div>\n        </div>\n        );\n    }\n    else if (props.dishes.errMess)\n    {\n        return(\n          <div className = \"container\">\n              <div className = \"row\">\n                <h4>{props.dishes.errMess}</h4>\n              </div>\n          </div>\n          );\n    }\n    else\n        return (\n            <div className=\"container\">\n                <div className = \"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem> <Link to = '/home'> Home </Link> </BreadcrumbItem>\n                        <BreadcrumbItem active> Menu </BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className = \"col-12\">\n                        <h3> Menu </h3>\n                        <hr />\n                    </div>\n                </div>\n                <div className=\"row\">\n                    {menu}\n                </div>\n            </div>\n        );\n}\nexport default Menu; ","import {React, Component} from 'react';\nimport { Card, CardBody, CardText, CardImg, CardTitle, Breadcrumb, BreadcrumbItem,Button, Modal, ModalBody, ModalHeader, Label, Row , Col } from 'reactstrap';\nimport {Link} from 'react-router-dom';  \nimport { Control, LocalForm, Errors } from \"react-redux-form\";\nimport {Loading} from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !val || val.length <= len;\nconst minLength = (len) => (val) => val && val.length >= len;\n\nfunction RenderDish({ dish }) {\n  if (dish != null) {\n    return (\n      <div className = \"col-12 col-md m-1\" key={dish.id}>\n        <FadeTransform in \n                transformProps = {{\n                    exitTransform: 'scale(0.5) translateY(-50%)'\n                }}>\n          <Card>\n            <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\n            <CardBody>\n              <CardTitle>{dish.name}</CardTitle>\n              <CardText>{dish.description}</CardText>\n            </CardBody>\n          </Card>\n        </FadeTransform>\n      </div>\n    );\n  } else {\n    return <div></div>;\n  }\n}\nfunction RenderComments({ comments,postComment, dishId }) {\n  if (comments != null) {\n      return (\n        <div className = \"col-12  m-1\">\n          <h4>Comments</h4>\n          <ul className = \"list-unstyled\">\n              <Stagger in>\n              {comments.map((comment) => {\n                return (\n                  <Fade in> \n                      <li key={comment.id}>\n                      <p>{comment.comment}</p>\n                      <p> -- {comment.author} ,{\" \"}\n                        {new Intl.DateTimeFormat(\"en-US\", {\n                          year: \"numeric\",\n                          month: \"short\",\n                          day: \"2-digit\",\n                        }).format(new Date(Date.parse(comment.date)))}\n                      </p>\n                    </li>\n                </Fade>\n                );\n              })}\n              </Stagger>\n            </ul>\n            <CommentForm dishId={dishId} postComment={postComment}/>\n        </div>\n      );\n    }\n    else {\n      return <div></div>;\n    }\n  \n}\n\nclass CommentForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isModalOpen: false,\n    };\n\n    this.toggleModal = this.toggleModal.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  toggleModal() {\n    this.setState({\n      isModalOpen: !this.state.isModalOpen,\n    });\n  }\n\n  handleSubmit(values) {\n    console.log(\"Current State is: \" + JSON.stringify(values));\n    alert(\"Current State is: \" + JSON.stringify(values));\n    this.toggleModal();\n    this.props.postComment(this.props.dishId, values.rating, values.yourname, values.comment);\n    //event.preventDefault();\n  }\n\n  render() {\n    return (\n      <div>\n        <Button\n          outline\n          type=\"submit\"\n          color=\"secondary\"\n          onClick={this.toggleModal}\n        >\n          <span className=\"fa fa fa-pencil fa-lg\"></span> Submit Comment\n        </Button>\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n          <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\n          <ModalBody>\n            <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\n              <Row className=\"form-group\">\n                <Col md={12}>\n                  <Label htmlFor=\"rating\">Rating</Label>\n                  <Control.select\n                    model=\".rating\"\n                    type=\"select\" \n                    id='rating'\n                    name=\"rating\"\n                    className=\"form-control custom-select\"\n                  >\n                    <option value=\"1\">1</option>\n                    <option value=\"2\">2</option>\n                    <option value=\"3\">3</option>\n                    <option value=\"4\">4</option>\n                    <option value=\"5\">5</option>\n                  </Control.select>\n                </Col>\n              </Row>\n\n              <Row className=\"form-group\">\n                <Col md={12}>\n                  <Label htmlFor=\"yourname\">Your Name</Label>\n                  <Control.text\n                    model=\".yourname\"\n                    id=\"yourname\"\n                    name=\"yourname\"\n                    placeholder=\"Your Name\"\n                    className=\"form-control\"\n                    validators={{\n                      required,\n                      minLength: minLength(3),\n                      maxLength: maxLength(15),\n                    }}\n                  />\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".yourname\"\n                    show=\"touched\"\n                    messages={{\n                      required: \"Required\",\n                      minLength: \"Must be greater than 2 characters\",\n                      maxLength: \"Must be 15 characters or less\",\n                    }}\n                  />\n                </Col>\n              </Row>\n\n              <Row className=\"form-group\">\n                <Col md={12}>\n                  <Label htmlFor=\"comment\">Comment</Label>\n                  <Control.textarea\n                    model=\".comment\"\n                    id=\"comment\"\n                    name=\"comment\"\n                    rows=\"6\"\n                    className=\"form-control\"\n                  />\n                </Col>\n              </Row>\n              <Row className=\"form-group\">\n                <Col md={12}>\n                  <Button type=\"submit\" color=\"primary\">\n                    Submit\n                  </Button>\n                </Col>\n              </Row>\n            </LocalForm>\n          </ModalBody>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst DishDetail = (props) => {\n  if (props.isLoading) {\n    return(\n    <div className = \"container\">\n        <div className = \"row\">\n          <Loading />\n        </div>\n    </div>\n    );\n  }\n  else if (props.errMess){\n    return(\n      <div className = \"container\">\n          <div className = \"row\">\n            <h4>{props.errMess}</h4>\n          </div>\n      </div>\n      );\n  }\n  else\n      return (\n        <div className=\"container\">\n          <div className=\"row\">\n            <Breadcrumb>\n              <BreadcrumbItem>\n                <Link to=\"/menu\">Menu</Link>\n              </BreadcrumbItem>\n              <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\n            </Breadcrumb>\n            <div className=\"col-12\">\n              <h3>{props.dish.name}</h3>\n              <hr />\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-12 col-md-5 m-1\">\n              <RenderDish dish={props.dish} />\n            </div>\n            <div className=\"col-12 col-md-5 m-1\">\n              <RenderComments \n              dishId={props.dish.id}\n              comments={props.comments} \n              postComment={props.postComment}\n              />\n            </div>\n          </div>\n        </div>\n      );\n};\n\nexport default DishDetail;\n\n\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Footer(props)\n{\n    return(\n        <div className=\"footer\">\n        <div className=\"container\">\n            <div className=\"row justify-content-center\">             \n                <div className=\"col-4 offset-1 col-sm-2\">\n                    <h5>Links</h5>\n                    <ul className=\"list-unstyled\">\n                        <li><Link to = \"/home\">Home</Link></li>\n                        <li><Link to = \"/aboutus\">About</Link></li>\n                        <li><Link to = \"/menu\">Menu</Link></li>\n                        <li><Link to = \"/contactus\">Contact</Link></li>\n                    </ul>\n                </div>\n                <div className=\"col-7 col-sm-5\">\n                    <h5>Our Address</h5>\n                    <address>\n\t\t              121, Clear Water Bay Road<br />\n\t\t              Clear Water Bay, Kowloon<br />\n\t\t              HONG KONG<br />\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\n                         confusion@food.net</a>\n                    </address>\n                </div>\n                <div className=\"col-12 col-sm-4 align-self-center\">\n                    <div className=\"text-center\">\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"row justify-content-center\">             \n                <div className=\"col-auto\">\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\n                </div>\n            </div>\n        </div>\n    </div>\n    );\n}\nexport default Footer;","import React from 'react';\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle } from 'reactstrap'; \nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nimport { FadeTransform } from 'react-animation-components';\n\nfunction RenderCard( {item, isLoading, errMess} )\n{\n    if (isLoading){\n        return(\n            <Loading/>\n        );\n    }\n    else if (errMess){\n        return(\n            <h4>{errMess}</h4>\n        );\n    }\n    else if (item!=null)\n        return(\n            <FadeTransform in \n                transformProps = {{\n                    exitTransform: 'scale(0.5) translateY(-50%)'\n                }}>\n            <Card>\n                <CardImg src = { baseUrl + item.image} alt = {item.name} /> \n                <CardBody> \n                    <CardTitle> {item.name}  </CardTitle>\n                    {item.designation ? <CardSubtitle> {item.designation} </CardSubtitle> : null}\n                    <CardText>{item.description} </CardText>\n                </CardBody>\n            </Card>\n            </FadeTransform>\n        );\n    else\n        return (<div/>);\n}\n\n\n\nfunction Home(props)\n{\n    console.log('dish:' + props.dish);\n    console.log('props:' + props);\n    console.log('leaders:' + props.leader);\n    \n    return(\n        <div className = \"container\">\n            <div className = \"row align -items-start\">\n                <div className = \"col-12 col-md m-1\">\n                    <RenderCard item =  {props.dish} \n                        isLoading = {props.dishesLoading}\n                        errMess = {props.dishErrMess}/> \n                </div>\n                <div className = \"col-12 col-md m-1\">\n                    <RenderCard item =  {props.promotion } \n                    isLoading = {props.promoLoading}\n                    errMess = {props.promoErrMess}/> \n                </div>\n                <div className = \"col-12 col-md m-1\">\n                    <RenderCard item =  {props.leader} \n                    isLoading = {props.leaderLoading}\n                    errMess = {props.leaderErrMess}\n                    /> \n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Home;","import React , {Component} from 'react';\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Row , Col  } from 'reactstrap';\nimport { Control, Form, Errors } from 'react-redux-form';\nimport { Link } from 'react-router-dom';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => (val) && (val.length >= len);\nconst isNum = (val) => !isNaN(Number(val));\nconst validEmail = (val) => /^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,4}/.test(val);\n\nclass Contact extends Component\n {\n    constructor(props)\n    {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n\n    handleSubmit(values)\n    {\n        console.log(\"Current state is: \" +JSON.stringify(values));\n        this.props.resetFeedbackForm();\n        this.props.postFeedback(values.firstname, values.lastname, values.telnum, values.email, values.agree, values.contactType, values.message);\n        alert(\"Thank You for your feedback! \\n\" +JSON.stringify(values));\n        //default behavior is going to next page after submitting. we are preventing that .\n    }\n\n    render()\n    {\n  \n    return(\n        <div className=\"container\">\n            <div className = \"row\">\n                <Breadcrumb>\n                    <BreadcrumbItem> <Link to = '/home'> Home </Link> </BreadcrumbItem>\n                    <BreadcrumbItem active> Contact Us </BreadcrumbItem>\n                </Breadcrumb>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12\">\n                <h3>Location Information</h3>\n                </div>\n                <div className=\"col-12 col-sm-4 offset-sm-1\">\n                        <h5>Our Address</h5>\n                        <address>\n                        121, Clear Water Bay Road<br />\n                        Clear Water Bay, Kowloon<br />\n                        HONG KONG<br />\n                        <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\n                        <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\n                        <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n                        </address>\n                </div>\n                <div className=\"col-12 col-sm-6 offset-sm-1\">\n                    <h5>Map of our Location</h5>\n                </div>\n                <div className=\"col-12 col-sm-11 offset-sm-1\">\n                    <div className=\"btn-group\" role=\"group\">\n                        <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"> <i className=\"fa fa-phone\"></i> Call</a>\n                        <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\n                        <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\n                    </div>\n                </div>\n            </div>\n            <div className = \"row row-container\">\n                <div className = \"col-12\">\n                    <h3> Send us Your Feedback </h3>\n                </div>\n                <div className = \"col-12 col-md-9\">\n                    <Form model = \"feedback\" onSubmit = {(values) => this.handleSubmit(values)}>\n                        <Row className = \"form-group\">\n                            <Label htmlFor = \"firstname\" md={2}> First Name </Label>\n                            <Col md = {10}>\n                                <Control.text model = \".firstname\" id = \"firstname\" name = \"firstname\" \n                                placeholder = \"enter your first name\"\n                                className = \"form-control\"\n                                validators = {\n                                    {\n                                        required, minLength: minLength(3), maxLength:maxLength(15)\n                                    }\n                                }\n                                />\n                            <Errors \n                                className = \"text-danger\"\n                                model = \".firstname\"\n                                show = \"touched\"\n                                messages = {\n                                    {\n                                        required: 'required',\n                                        minLength: 'must be greater than 2 char ',\n                                        maxLength: 'must be less than 15 characters'\n                                    }\n                                }\n                            />\n\n                                \n                            </Col>\n                        </Row>\n                        <Row className = \"form-group\">\n                            <Label htmlFor = \"lastname\" md={2}> Last Name </Label>\n                            <Col md = {10}>\n                                <Control.text model = \".lastname\" id = \"lastname\" name = \"lastname\" placeholder = \"enter your last name\"\n                                className = \"form-control\"\n                                validators = {\n                                    {\n                                        required, minLength: minLength(3), maxLength:maxLength(15)\n                                    }\n                                }\n                               />\n                            <Errors \n                                className = \"text-danger\"\n                                model = \".lastname\"\n                                show = \"touched\"\n                                messages = {\n                                    {\n                                        required: 'required',\n                                        minLength: 'must be greater than 2 char ',\n                                        maxLength: 'must be less than 15 characters'\n                                    }\n                                }\n                            />  \n                            </Col>\n                        </Row>\n                        <Row className = \"form-group\">\n                            <Label htmlFor = \"telnum\" md={2}> Contact Tel. </Label>\n                            <Col md = {10}>\n                                <Control.text model = \".telnum\" id = \"telnum\" name = \"telnum\" placeholder = \"enter your Ph. Number\"\n                                className = \"form-control\"\n                                validators = {\n                                    {\n                                        required, minLength: minLength(3), maxLength:maxLength(10), isNum\n                                    }\n                                }\n                                />\n                            <Errors \n                                className = \"text-danger\"\n                                model = \".telnum\"\n                                show = \"touched\"\n                                messages = {\n                                    {\n                                        required: 'required',\n                                        minLength: 'must be greater than 2 numbers ',\n                                        maxLength: 'must be less than 11 numbers',\n                                        isNum: 'must be a number'\n                                    }\n                                }\n                            />  \n                                \n                            </Col>\n                        </Row>\n                        <Row className = \"form-group\">\n                            <Label htmlFor = \"email\" md={2}> Email </Label>\n                            <Col md = {10}>\n                                <Control.text model = \".email\" id = \"email\" name = \"email\" placeholder = \"enter your email\"\n                                className = \"form-control\"\n                                validators = {\n                                    {\n                                        required, validEmail\n                                   \n                                    }\n                                }\n                                />\n                            <Errors \n                                className = \"text-danger\"\n                                model = \".email\"\n                                show = \"touched\"\n                                messages = {\n                                    {\n                                        required: 'Required',\n                                        validEmail: 'Invalid Email address'\n                                    }\n                                }\n                            />      \n                            </Col>\n                        </Row>\n                        <Row className = \"form-group\">\n                            <Col md = {{size:6, offset:2}}>\n                            <div className = \"form-check\">\n                                <Label check>\n                                    <Control.checkbox model = \".gree\" name = \"agree\"\n                                     className = \"form-check-input\"\n                                     \n                                    /> {' '}\n                                     <strong> May we contact you? </strong>\n                                </Label>\n                            </div>\n                            </Col>\n                            <Col md = {{size:3, offset:1}}>\n                                <Control.select model = \".contactType\" name = \"contactType\"\n                                className = \"form-control\">\n                                <option>Tel.</option>\n                                <option>Email</option>\n                                </Control.select>\n                            </Col> \n                        </Row>\n                        <Row className = \"form-group\">\n                            <Label htmlFor = \"message\" md={2}> Your Feedback </Label>\n                            <Col md = {10}>\n                                <Control.textarea model = \".message\" id = \"message\" name = \"message\" \n                                rows = \"12\"\n                                className = \"form-control\"\n                                />\n                            </Col>\n                        </Row>\n                        <Row className = \"form-group\">\n                            <Col md = {{size:10, offset:2}}>\n                                <Button type = \"submit\" color = \"primary\">\n                                    Send Feedback\n                                </Button>\n                            </Col>\n                        </Row>\n                    </Form>\n                    \n                </div>\n            </div>\n        </div>\n    );\n    }\n    \n }\n\nexport default Contact;","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nimport {  Fade, Stagger } from 'react-animation-components';\n\nfunction RenderLeader( {leaders, isLoading, errMess} )\n{\n    if (isLoading){\n        return(\n            <Loading/>\n        );\n    }\n    else if (errMess){\n        return(\n            <h4>{errMess}</h4>\n        );\n    }\n    else if(leaders != null)\n    return(\n        <div>\n            <Media tag=\"li\">\n                    <div className = \"media mt-5\">\n                        <img src = { baseUrl + leaders.image} alt = {leaders.name} />\n                        <div className = \"media-body ml-5\" >\n                            <h4 className =\"mt-0 \"> {leaders.name} </h4>\n                            <h6 className =\"mt-0 \">{leaders.designation}</h6>\n                            {leaders.description}\n                        </div>\n                    </div> \n            </Media>\n        </div>\n        \n    );\n    else\n    return(\n        <div/>\n    );\n\n}\n\nfunction About(props) {\n\n    \n    const leaders = <Stagger in> \n                    {props.leaders.leaders.map((leader) => {\n        return (\n                <Fade in>\n                <RenderLeader key = {leader.id} \n                leaders = {leader} \n                isLoading = {props.leaderLoading}\n                errMess = {props.leaderErrMess}/>      \n                </Fade>                 \n        );\n    })}\n    </Stagger>\n    \n    \n\n    return(\n        <div className=\"container\">\n            <div className=\"row\">\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"col-12\">\n                    <h3>About Us</h3>\n                    <hr />\n                </div>                \n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12 col-md-6\">\n                    <h2>Our History</h2>\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\n                </div>\n                <div className=\"col-12 col-md-5\">\n                    <Card>\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\n                        <CardBody>\n                            <dl className=\"row p-1\">\n                                <dt className=\"col-6\">Started</dt>\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\n                                <dt className=\"col-6\">Major Stake Holder</dt>\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\n                                <dd className=\"col-6\">$1,250,375</dd>\n                                <dt className=\"col-6\">Employees</dt>\n                                <dd className=\"col-6\">40</dd>\n                            </dl>\n                        </CardBody>\n                    </Card>\n                </div>\n                <div className=\"col-12\">\n                    <Card>\n                        <CardBody className=\"bg-faded\">\n                            <blockquote className=\"blockquote\">\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\n                                    I'm not hungry enough to eat six.</p>\n                                <footer className=\"blockquote-footer\">Yogi Berra,\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\n                                    P. Pepe, Diversion Books, 2014</cite>\n                                </footer>\n                            </blockquote>\n                        </CardBody>\n                    </Card>\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12\">\n                    <h2>Corporate Leadership</h2>\n                </div>\n                <div className=\"col-12\">\n                            <Media list>\n                                {leaders}\n                            </Media>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default About;    ","export const ADD_COMMENT = 'ADD_COMMENT';\nexport const DISHES_LOADING = 'DISHES_LOADING';\nexport const DISHES_FAILED = 'DISHES_FAILED';\nexport const ADD_DISHES = 'ADD_DISHES';\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\nexport const ADD_PROMOS = 'ADD_PROMOS';\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\nexport const ADD_LEADERS = 'ADD_LEADERS';\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\nexport const FEEDBACK_FAILED = 'FEEDBACK_FAILED';\nexport const FEEDBACK_LOADING = 'FEEDBACK_LOADING';\nexport const ADD_FEEDBACK = 'ADD_FEEDBACK';","import * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/baseUrl';\n\nexport const addComment = (comment) => ({\n    type: ActionTypes.ADD_COMMENT,\n    payload: comment\n});\n//payload specifies all the data that is required\nexport const postComment = (dishId, rating, author,comment) => (dispatch) => {\n\n  const newComment = {\n      dishId: dishId,\n      rating: rating,\n      author: author,\n      comment: comment\n  };\n  newComment.date = new Date().toISOString();\n\n  return fetch(baseUrl + 'comments', {\n      method: 'POST',\n      body: JSON.stringify(newComment),\n      headers: {\n          'Content-Type': 'application/json'\n      },\n      credentials: 'same-origin'\n  })\n  .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n    error => {\n          var errmess = new Error(error.message);\n          throw errmess;\n    })\n  .then(response => response.json())\n  .then(response => dispatch(addComments(response)))\n  .catch(error => {console.log('Post Comments ', error.message);});\n};\n\n//fetch dishes is a thunk. It returns a function\nexport const fetchDishes = () => (dispatch) => {\n\n    dispatch(dishesLoading(true));\n\n    return fetch(baseUrl + 'dishes')\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n      })\n    .then(response => response.json())\n    .then(dishes => dispatch(addDishes(dishes)))\n    .catch(error => dispatch(dishesFailed(error.message)));\n}\n\nexport const fetchComments = () => (dispatch) => {    \n    return fetch(baseUrl + 'comments')\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n      })\n    .then(response => response.json())\n    .then(comments => dispatch(addComments(comments)))\n    .catch(error => dispatch(commentsFailed(error.message)));\n};\n\nexport const fetchPromos = () => (dispatch) => {\n    \n    dispatch(promosLoading());\n\n    return fetch(baseUrl + 'promotions')\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n      })\n    .then(response => response.json())\n    .then(promos => dispatch(addPromos(promos)))\n    .catch(error => dispatch(promosFailed(error.message)));\n}\n\n\nexport const promosLoading = () => (\n    {\n        type: ActionTypes.PROMOS_LOADING\n    }\n);\n\nexport const dishesLoading = () => (\n    {\n        type: ActionTypes.DISHES_LOADING\n    }\n);\n\nexport const dishesFailed = (errmess) => ({\n    type:ActionTypes.DISHES_FAILED,\n    payload: errmess\n});\n\nexport const promosFailed = (errmess) => ({\n    type:ActionTypes.PROMOS_FAILED,\n    payload: errmess\n});\n\nexport const addDishes = (dishes) => ({\n    type: ActionTypes.ADD_DISHES,\n    payload: dishes\n});\n\nexport const commentsFailed = (errmess) => ({\n    type:ActionTypes.COMMENTS_FAILED,\n    payload: errmess\n});\n\nexport const addComments = (comments) => ({\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n});\n\nexport const addPromos = (promos) => ({\n    type: ActionTypes.ADD_PROMOS,\n    payload: promos\n});\n\nexport const fetchLeaders = () => (dispatch) => {\n    \n  dispatch(leadersLoading());\n\n  return fetch(baseUrl + 'leaders')\n  .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n    error => {\n          var errmess = new Error(error.message);\n          throw errmess;\n    })\n  .then(response => response.json())\n  .then(leaders => dispatch(addLeaders(leaders)))\n  .catch(error => dispatch(leadersFailed(error.message)));\n}\n\nexport const addLeaders = (leaders) => ({\n  type: ActionTypes.ADD_LEADERS,\n  payload: leaders\n});\n\nexport const leadersFailed = (errmess) => ({\n  type:ActionTypes.LEADERS_FAILED,\n  payload: errmess\n});\n\nexport const leadersLoading = () => (\n  {\n      type: ActionTypes.LEADERS_LOADING\n  }\n);\n\nexport const postFeedback = (firstname,lastname,telnum,email,agree,contactType,message) => (dispatch) => {\n\n  const newFeedback = {\n      \n      firstname: firstname,\n      lastname: lastname,\n      telnum: telnum,\n      email: email,\n      agree:agree,\n      contactType:contactType,\n      message:message\n  };\n\n  return fetch(baseUrl + 'feedback', {\n      method: 'POST',\n      body: JSON.stringify(newFeedback),\n      headers: {\n          'Content-Type': 'application/json'\n      },\n      credentials: 'same-origin'\n  })\n  .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n    error => {\n          var errmess = new Error(error.message);\n          throw errmess;\n    })\n  .then(response => response.json())\n  .then(response => dispatch(addFeedback(response)))\n  .catch(error => {console.log('Post Comments ', error.message);});\n};\n\nexport const addFeedback = (feedback) => ({\n  type: ActionTypes.ADD_FEEDBACK,\n  payload: feedback\n});\n\nexport const fetchFeedback = () => (dispatch) => {    \n  return fetch(baseUrl + 'feedback')\n  .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n    error => {\n          var errmess = new Error(error.message);\n          throw errmess;\n    })\n  .then(response => response.json())\n  .then(feedback => dispatch(addFeedback(feedback)))\n  .catch(error => dispatch(feedbackFailed(error.message)));\n};\n\nexport const feedbackFailed = (errmess) => ({\n  type:ActionTypes.FEEDBACK_FAILED,\n  payload: errmess\n});","import React, { Component } from 'react';\nimport Header from './HeaderComponent';\nimport Menu from './MenuComponent';\nimport DishDetail from './DishdetailComponent';\nimport Footer from './FooterComponent';\nimport Home from'./HomeComponent';\nimport Contact from './ContactComponent';\nimport About from './AboutusComponent';\nimport { Switch, Route, Redirect, withRouter} from 'react-router-dom'; \nimport {connect} from 'react-redux';\nimport { postComment,fetchComments,fetchDishes, fetchPromos, fetchLeaders, postFeedback, fetchFeedback } from '../redux/ActionCreators';\nimport { actions } from \"react-redux-form\";\nimport {TransitionGroup, CSSTransition} from 'react-transition-group';\n// main component will obtain the state from \"STORE\"\nconst mapStateToProps = state => {\n\n  return{\n    dishes: state.dishes,\n    comments: state.comments,\n    promotions: state.promotions,\n    leaders: state.leaders\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    postComment: (dishId,rating,author,comment) => {dispatch(postComment(dishId,rating,author,comment))},\n    fetchDishes: ()=> {dispatch(fetchDishes())},\n    fetchComments: ()=> {dispatch(fetchComments())},\n    fetchPromos: ()=> {dispatch(fetchPromos())},\n    fetchLeaders:()=>{dispatch(fetchLeaders())},\n    resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\n    postFeedback: (firstname,lastname,telnum,email,agree,contactType,message) => {dispatch(postFeedback(firstname,lastname,telnum,email,agree,contactType,message))},\n    fetchFeedback: ()=> {dispatch(fetchFeedback())},\n\n});\n\nclass Main extends Component {\n\n  componentDidMount(){\n    this.props.fetchDishes();\n    this.props.fetchComments();\n    this.props.fetchPromos();\n    this.props.fetchLeaders();\n    this.props.fetchFeedback();\n  }\n\n  render() {\n    const HomePage = () => {\n      console.log(\"props promo \" + this.props.promotions);\n      if (this.props.dishes != null)\n      return(\n        <Home \n        dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\n        dishesLoading={this.props.dishes.isLoading}\n        dishErrMess={this.props.dishes.errMess}\n        promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\n        promoLoading={this.props.promotions.isLoading}\n        promoErrMess={this.props.promotions.errMess}\n        leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\n        leaderLoading = {this.props.leaders.isLoading}\n        leaderErrMess={this.props.leaders.errMess}\n    />\n      );\n      else return (<div/>);\n     \n    }\n    console.log(this.props.dishes);\n    \n    const DishWithId = ( {match} ) => {\n      console.log('Comments you: ', this.props.comments.comments);\n      \n      return(\n        <DishDetail dish = {this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId, 10))[0]}\n          isLoading={this.props.dishes.isLoading}\n          errMess = {this.props.dishes.errMess}\n          comments = {this.props.comments.comments.filter(((comment) => comment.dishId === parseInt(match.params.dishId, 10)))}\n          commentsErrMess = {this.props.comments.errMess}\n          postComment = {this.props.postComment}\n        /> \n      );\n     \n    }\n    \n    return (\n      <div>\n        <Header/>\n        <TransitionGroup>\n            <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\n              <Switch location={this.props.location}>\n                  <Route path='/home' component={HomePage} />\n                  <Route exact path='/aboutus' component={() => <About leaders={this.props.leaders} \n                                                                        leaderLoading = {this.props.leaders.isLoading}\n                                                                        leaderErrMess={this.props.leaders.errMess}/>} />\n                  <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\n                  <Route path='/menu/:dishId' component={DishWithId} />\n                  <Route exact path='/contactus' component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} \n                                                                    postFeedback = {this.props.postFeedback}/>} />\n                  <Redirect to=\"/home\" />\n              </Switch>\n            </CSSTransition>\n          </TransitionGroup>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\n//used an inline function for calling Menu since we needed to pass props as a parameter\n//redirect is used as a default path when route does not match any of the two options given ","import * as ActionTypes from './ActionTypes';\n\nexport const Dishes = (state = {\n        isLoading: true,\n        errMess: null,\n        dishes: []\n    }, action ) => {\n    switch(action.type){\n        case ActionTypes.ADD_DISHES:\n            return {...state, isLoading:false, errMess:null, dishes: action.payload}\n\n        case ActionTypes.DISHES_LOADING:\n            //returning an immutable using ...state -> returns original state\n            return {...state, isLoading:true, errMess:null, dishes:[]}\n\n        case ActionTypes.DISHES_FAILED:\n                return {...state, isLoading:false, errMess:action.payload, dishes: [] }\n        default: return state;\n    }\n}","import * as ActionTypes from './ActionTypes';\n\nexport const Comments = (state = {\n    errMess:null,\n    comments: []\n}, action ) => {\n    switch(action.type){\n        case ActionTypes.ADD_COMMENTS:\n            return {...state,  errMess:null, comments: action.payload}\n\n        case ActionTypes.ADD_COMMENT:\n            var comment = action.payload;\n            return { ...state, comments: state.comments.concat(comment)};\n            // concating is an immutable operation which creates a new state instead of modifying the original state \n        \n        case ActionTypes.COMMENTS_FAILED:\n            return {...state, errMess:action.payload}\n\n        default: return state;\n    }\n}","import * as ActionTypes from './ActionTypes';\n\nexport const Promotions = (state = {\n        isLoading: true,\n        errMess: null,\n        promotions: []\n    }, action) => {\n    switch(action.type){\n\n        case ActionTypes.ADD_PROMOS:\n            return {...state, isLoading:false, errMess:null, promotions: action.payload}\n\n        case ActionTypes.PROMOS_LOADING:\n            //returning an immutable using ...state -> returns original state\n            return {...state, isLoading:true, errMess:null, promotions:[]}\n\n        case ActionTypes.PROMOS_FAILED:\n                return {...state, isLoading:false, errMess:action.load, promotions: [] }\n        \n        default: return state;\n    }\n}","import * as ActionTypes from './ActionTypes';\nexport const Leaders = (state = {\n    isLoading: true,\n    errMess: null,\n    leaders: []\n}, action) => {\n    switch(action.type){\n        case ActionTypes.ADD_LEADERS:\n            return {...state, isLoading:false, errMess:null, leaders: action.payload}\n\n        case ActionTypes.LEADERS_LOADING:\n            //returning an immutable using ...state -> returns original state\n            return {...state, isLoading:true, errMess:null, leaders:[]}\n\n        case ActionTypes.LEADERS_FAILED:\n                return {...state, isLoading:false, errMess:action.payload, leaders: [] }\n        default: return state;\n    }\n}","export const InitialFeedback = {\n    firstname: '',\n    lastname: '',\n    telnum: '',\n    email: '',\n    agree: false,\n    contactType: 'Tel.',\n    message:''\n}","\nimport React, { Component } from 'react';\nimport Main from './components/MainComponent';\nimport { BrowserRouter } from 'react-router-dom'; \nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\nimport './App.css';\n\n\nconst store = ConfigureStore();\nclass App extends Component {\n\n  render(){\n  return (\n    <Provider store = {store}>\n      <BrowserRouter>\n        <div >\n          <Main/>\n        </div>\n      </BrowserRouter>\n    </Provider>\n  );\n  }\n}\n\nexport default App;\n","import { createStore,combineReducers, applyMiddleware } from 'redux';\nimport { createForms} from 'react-redux-form';\nimport {Dishes} from './dishes';\nimport {Comments} from './comments';\nimport {Promotions} from './promotions';\nimport {Leaders} from './leaders';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { InitialFeedback } from './forms';\n\nexport const ConfigureStore = () => {\n    const store = createStore(\n        combineReducers({\n             dishes: Dishes,\n             comments: Comments,\n             promotions: Promotions,\n             leaders: Leaders,\n             ...createForms({\n                 feedback: InitialFeedback\n             })\n        }),\n        applyMiddleware(thunk, logger)\n    );\n    \n    return store;\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}